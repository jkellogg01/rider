/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AccountImport } from './routes/_account'
import { Route as IndexImport } from './routes/index'
import { Route as AccountRegisterImport } from './routes/_account.register'
import { Route as AccountLoginImport } from './routes/_account.login'

// Create/Update Routes

const AccountRoute = AccountImport.update({
  id: '/_account',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AccountRegisterRoute = AccountRegisterImport.update({
  path: '/register',
  getParentRoute: () => AccountRoute,
} as any)

const AccountLoginRoute = AccountLoginImport.update({
  path: '/login',
  getParentRoute: () => AccountRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_account': {
      id: '/_account'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/_account/login': {
      id: '/_account/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AccountLoginImport
      parentRoute: typeof AccountImport
    }
    '/_account/register': {
      id: '/_account/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AccountRegisterImport
      parentRoute: typeof AccountImport
    }
  }
}

// Create and export the route tree

interface AccountRouteChildren {
  AccountLoginRoute: typeof AccountLoginRoute
  AccountRegisterRoute: typeof AccountRegisterRoute
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountLoginRoute: AccountLoginRoute,
  AccountRegisterRoute: AccountRegisterRoute,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AccountRouteWithChildren
  '/login': typeof AccountLoginRoute
  '/register': typeof AccountRegisterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AccountRouteWithChildren
  '/login': typeof AccountLoginRoute
  '/register': typeof AccountRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_account': typeof AccountRouteWithChildren
  '/_account/login': typeof AccountLoginRoute
  '/_account/register': typeof AccountRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/register'
  id: '__root__' | '/' | '/_account' | '/_account/login' | '/_account/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_account"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_account": {
      "filePath": "_account.tsx",
      "children": [
        "/_account/login",
        "/_account/register"
      ]
    },
    "/_account/login": {
      "filePath": "_account.login.tsx",
      "parent": "/_account"
    },
    "/_account/register": {
      "filePath": "_account.register.tsx",
      "parent": "/_account"
    }
  }
}
ROUTE_MANIFEST_END */
